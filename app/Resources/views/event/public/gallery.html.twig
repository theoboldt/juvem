{% extends 'base.html.twig' %}

{% block head %}
    <meta name="robots" content="noindex, follow">{% endblock %}

{% block title %}Bildergalerie ({{ event.title }}){% endblock %}

{% block body %}
    <section>
        <article>
            {% embed 'common/header/base-page-header.html.twig' with {'title': event.title, 'subtitle': 'Bildergalerie'} %}
                {% block breadcrumb %}
                    <li><a href="{{ path('homepage') }}">{{ appTitle }}</a></li>
                    <li><a href="{{ path('event_public_detail', {'eid': event.eid }) }}">{{ event.title }}</a>
                    <li class="active">Bildergalerie</li>
                {% endblock %}
            {% endembed %}
            <div class="container">
                <div class="row">
                    <div class="col-xs-12">
                        <div id="gallery" style="height:300px;" data-width="0">
                            {% for image in images %}
                                <div class="gallery-image-wrap gallery-thumbnail"
                                     id="gallery-image-wrap-{{ image.iid }}" data-image-id="{{ image.iid }}">
                                    <div class="gallery-image"></div>
                                    <a href="{{ url('gallery_image_original', {'eid': event.eid, 'iid': image.iid, 'hash': galleryHash}) }}"></a>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </section>
{% endblock %}
{% block javascriptCustom %}
    {% cspscript %}
        <script>
            jQuery(document).ready(function () {
                var containerEl = jQuery('#gallery'),
                    images = [
                        {% for image in images -%}{% if not loop.first %}, {% endif %}{
                            srcThumbnail: '{{ url('gallery_image_thumbnail', {'eid': event.eid, 'iid': image.iid, 'hash': galleryHash}) }}',
                            srcPreview: '{{ url('gallery_image_preview', {'eid': event.eid, 'iid': image.iid, 'hash': galleryHash}) }}',
                            srcOriginal: '{{ url('gallery_image_original', {'eid': event.eid, 'iid': image.iid, 'hash': galleryHash}) }}',
                            height: {{ image.height }},
                            width: {{ image.width }},
                            wrapEl: jQuery('#gallery-image-wrap-{{ image.iid }}'),
                            thumbnailRequested: false,
                            thumbnailLoad: false,
                            previewRequested: false,
                            previewLoad: false
                        }{% endfor %}
                    ];

                var renderBoxes = function () {
                    var layoutGeometry = require('justified-layout')(
                        images,
                        {
                            containerPadding: 0,
                            targetRowHeight: 240,
                            containerWidth: containerEl.width()
                        }
                    );
                    containerEl.height(layoutGeometry.containerHeight);
                    containerEl.data('width', containerEl.width());

                    jQuery.each(images, function (index) {
                        var image = images[index],
                            wrapEl = image.wrapEl,
                            imageDivEl = wrapEl.find('.gallery-image'),
                            box = layoutGeometry.boxes[index];

                        wrapEl.height(box.height);
                        wrapEl.width(box.width);

                        imageDivEl.height(box.height);
                        imageDivEl.width(box.width);

                        var transformDefinition = 'translate(' + box.left + 'px, ' + box.top + 'px)';
                        wrapEl.css({
                            '-webkit-transform': transformDefinition,
                            '-moz-transform': transformDefinition,
                            '-ms-transform': transformDefinition,
                            '-o-transform': transformDefinition,
                            transform: transformDefinition
                        });
                    });
                };

                var renderImage = function (wrapEl, imageSrc, blur) {
                    var aEl = wrapEl.find('a');
                    aEl.empty();

                    aEl.prepend('<img' +
                        ' data-wrap-el-id="' + wrapEl.attr('id') + '"' +
                        ' width="' + wrapEl.width() + '"' +
                        ' height="' + wrapEl.height() + '"' +
                        ' src="' + imageSrc + '"' +
                        ' style="' + (blur ? 'filter: blur(3px);' : '') + '" />');
                };

                var improveImage = function (image) {
                    if (image.thumbnailRequested && !image.previewRequested) {
                        image.previewRequested = true;
                        image.wrapEl.find('.gallery-image').css('background-image', 'url(\'' + image.srcThumbnail + '\')');
                        renderImage(image.wrapEl, image.srcPreview, false);
                    } else if (!image.thumbnailRequested) {
                        image.thumbnailRequested = true;
                        renderImage(image.wrapEl, image.srcThumbnail, true);
                    }
                };

                var removeFaultyImageAndReRender = function (imageEl) {
                    var wrapElId = imageEl.data('wrap-el-id'),
                        imagesUpdated = [];
                    jQuery.each(images, function (index) {
                        var image = images[index],
                            wrapEl = image.wrapEl;

                        if (wrapEl.attr('id') === wrapElId) {
                            wrapEl.remove();
                        } else {
                            imagesUpdated.push(this);
                        }
                    });
                    images = imagesUpdated;
                    renderBoxes();
                };

                var loadImages = function () {
                    var allVisiblePreview = true,
                        allPreview = true;

                    jQuery.each(images, function (index) {
                        var image = images[index],
                            wrapEl = image.wrapEl;

                        if (!image.previewRequested) {
                            allPreview = false;
                        }

                        if (wrapEl.visible(true)) {
                            if (!image.previewRequested) {
                                allVisiblePreview = false;
                            }
                            improveImage(image);
                        }
                    });

                    if (allVisiblePreview && !allPreview) {
                        //improve others
                        jQuery.each(images, function (index) {
                            var image = images[index];
                            improveImage(image);
                        });
                    }
                };

                var updateImagesListenLoad = function () {
                    jQuery('#gallery').imagesLoaded().progress(function (instance, image) {
                        console.log(images);
                        if (!image.isLoaded) {
                            removeFaultyImageAndReRender(jQuery(image.img));
                        }
                        loadImages();
                    });
                };

                var renderImages = function () {
                    console.log(images);
                    //first iteration, render images in viewport
                    jQuery.each(images, function (index) {
                        var image = images[index],
                            wrapEl = image.wrapEl;

                        if (wrapEl.visible(true)) {
                            improveImage(image);
                        }
                    });
                    updateImagesListenLoad();
                };
                renderBoxes();
                renderImages();

                $(window).on("resize", function () {
                    if (containerEl.data('width') !== containerEl.width()) {
                        renderBoxes();
                    }
                });
            });
        </script>
    {% endcspscript %}
{% endblock %}