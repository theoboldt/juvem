# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
    app.twig_extension_glyph:
        class: AppBundle\Twig\Extension\BootstrapGlyph
        public: false
        tags:
            - { name: twig.extension }
    app.twig_extension_bootstrap_table_filter:
        class: AppBundle\Twig\Extension\BootstrapTableFilter
        public: false
        tags:
            - { name: twig.extension }
    app.twig_extension_bitmask:
        class: AppBundle\Twig\Extension\BitMask
        public: false
        tags:
            - { name: twig.extension }
    app.twig_extension_modal:
        class: AppBundle\Twig\Extension\ModalDialog
        public: false
        tags:
            - { name: twig.extension }
    app.twig_extension_fullname:
        class: AppBundle\Twig\Extension\Fullname
        public: false
        tags:
            - { name: twig.extension }
    app.twig_extension_is_instanceof:
        class: AppBundle\Twig\Extension\IsInstanceof
        public: false
        tags:
            - { name: twig.extension }
    app.twig_extension_heading_shifting_markdown:
        class: AppBundle\Twig\Extension\HeadingShiftingMarkdownTwigExtension
        arguments:
            - '@markdown.parser.parser_manager'
        public: false
        tags:
            - { name: twig.extension }
    app.participantsgrouped:
        class: AppBundle\Twig\Extension\ParticipationsParticipantsNamesGrouped
        public: false
        tags:
            - { name: twig.extension }
    app.eventdates:
        class: AppBundle\Twig\Extension\EventDates
        public: false
        tags:
            - { name: twig.extension }
    app.twig_extension_payment:
        class: AppBundle\Twig\Extension\PaymentInformation
        public: false
        tags:
            - { name: twig.extension }
    app.twig_global_customization:
        class: AppBundle\Twig\GlobalCustomization
        arguments:
            - '@twig'
            - '%kernel.root_dir%'
            - '%customization.app_title%'
            - '%customization.organization_name%'
            - '%customization.organization_address_street%'
            - '%customization.organization_address_postal_code%'
            - '%customization.organization_address_postal_locality%'
            - '%customization.organization_number_phone%'
            - '%customization.organization_number_fax%'
            - '%customization.organization_email%'
            - '%customization.privacy_responsible%'
            - '%customization.organization_website%'
            - '%customization.organization_facebook%'
            - '%customization.juvem_website%'
            - '%customization.logo_website%'
        public: true
        lazy: true
    app.secure_cache_decider:
        class: AppBundle\Twig\SecureCacheDecider
        arguments: ['@session']
        public: true
    app.twig_tab_index_skip:
        class: AppBundle\Twig\TabIndexSkip
        public: false
        arguments:
            - '@security.token_storage'
        lazy: true
    app.twig_mail_generator:
        class: AppBundle\Twig\MailGenerator
        arguments: ['%mailer_address%', '@twig', '@app.twig_global_customization']
    app.participation_manager:
        class: AppBundle\Manager\ParticipationManager
        arguments: ['@router','@mailer', '@app.twig_mail_generator', '@logger', '@doctrine.orm.entity_manager']
        public: true
    app.newsletter_manager:
        class: AppBundle\Manager\NewsletterManager
        arguments: ['@router', '@mailer', '@app.twig_mail_generator', '@logger']
        public: true
    app.newsletter_token_generator:
        class: FOS\UserBundle\Util\TokenGenerator
        public: true
    app.juvimg.service:
        class: AppBundle\Juvimg\JuvimgService
        factory: ['AppBundle\Juvimg\JuvimgService', create]
        public: true
        arguments:
          - "%juvimg.url%"
          - "%juvimg.password%"
          - "@logger"
    app.pdf_converter_service:
        class: AppBundle\PdfConverterService
        factory: ['AppBundle\PdfConverterService', create]
        public: true
        arguments:
          - "%app.libreoffice_binary_path%"
          - "%app.tmp.root.path%"
          - "@logger"
    app.file_cache.event:
        class: AppBundle\Cache\FileCache
        arguments:
          - "%app.cache.environment.path%/fc/event"
    app.file_cache.gallery:
        class: AppBundle\Cache\FileCache
        arguments:
          - "%app.cache.environment.path%/fc/gallery"
    app.upload_image_manager:
        class: AppBundle\Manager\UploadImageManager
        arguments: ['@app.file_cache.event', "%app.tmp.root.path%", '%vich_uploader.mappings%', 'event_image', '@logger', '@?app.juvimg.service']
    app.gallery_image_manager:
        class: AppBundle\Manager\UploadImageManager
        arguments: ['@app.file_cache.gallery', "%app.tmp.root.path%", '%vich_uploader.mappings%', 'gallery_image', '@logger', '@?app.juvimg.service']
        public: true
    app.user_registration.participation_listener:
        class: AppBundle\EventListeners\UserRegistrationListener
        arguments: ['@doctrine']
        tags:
            - { name: kernel.event_subscriber }
    app.security.implicit_login_listener:
        class: AppBundle\EventListeners\ImplicitLoginListener
        arguments: ['@session']
        tags:
            - { name: kernel.event_subscriber }
    app.comment_manager:
        class: AppBundle\Manager\CommentManager
        arguments: ['@doctrine', '@security.token_storage']
        public: true
    app.participant.profile_generator:
        class: AppBundle\Manager\ParticipantProfile\ParticipantProfileGenerator
        arguments:
            - "%app.tmp.root.path%"
            - "%app.web.root.path%"
            - "@router"
            - "@skies_barcode.generator"
            - "@app.comment_manager"
            - "@app.payment_manager"
            - "@libphonenumber.phone_number_util"
        public: true
    app.payment.invoice_manager:
        class: AppBundle\Manager\Invoice\InvoiceManager
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@app.payment_manager'
            - "%app.data.invoice.path%"
            - '@security.token_storage'
    app.payment_manager:
        class: AppBundle\Manager\Payment\PaymentManager
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@app.price_manager'
            - '@security.token_storage'
        public: true
    app.payment.expression_language_provider:
        class: AppBundle\Manager\Payment\ExpressionLanguageProvider
        arguments:
            - "%app.cache.environment.path%/fc/payment"
    app.price_manager:
        class: AppBundle\Manager\Payment\PriceManager
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@app.payment.expression_language_provider'
        public: true
    app.price.formula_variable_provider:
        class: AppBundle\Manager\Payment\PriceSummand\Formula\RepositoryFormulaVariableProvider
        arguments:
            - '@doctrine.orm.entity_manager'
        public: true
    AppBundle\Entity\AcquisitionAttribute\Formula\ValidFormulaValidator:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@app.payment.expression_language_provider'
        tags:
          - { name: validator.constraint_validator }
    app.payment_suggestion_manager:
        class: AppBundle\Manager\Payment\PaymentSuggestionManager
        arguments: ['@doctrine.orm.entity_manager']
        public: true
    app.exception_controller:
        class: AppBundle\Controller\ExceptionController
        arguments: ['@twig', '%kernel.debug%']
    app.food_service:
        class: AppBundle\Entity\Meals\FoodService
        arguments: ['@doctrine.orm.entity_manager']
        public: true

    app.exception_listener:
        class: AppBundle\EventListeners\ExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: -1}
            - { name: monolog.logger, channel: mychannel }
        arguments:
            - "@logger"
    app.response_serialize_listener:
        class: AppBundle\EventListeners\ResponseSerializerListener
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse, priority: -1}
        arguments:
            - "@jms_serializer"

    AppBundle\EventListeners\ParticipantRelatedParticipantResetListener:
        arguments:
            - "%app.tmp.root.path%"
        tags:
            - { name: doctrine.orm.entity_listener }
            -
                name: doctrine.orm.entity_listener
                event: preUpdate
                entity: AppBundle\Entity\Participant
            -
                name: doctrine.orm.entity_listener
                event: prePersist
                entity: AppBundle\Entity\Participant

    AppBundle\EventListeners\ParticipationRelatedParticipantResetListener:
        arguments:
            - "%app.tmp.root.path%"
        tags:
            - { name: doctrine.orm.entity_listener }
            -
                name: doctrine.orm.entity_listener
                event: preUpdate
                entity: AppBundle\Entity\Participation
    AppBundle\EventSubscribers\JmsInvoiceDownloadSubscriber:
        arguments:
            - "@app.payment.invoice_manager"
            - '@router'
            - '@app.pdf_converter_service'
        tags:
            - { name: jms_serializer.event_subscriber}
    app.related_participants_finder:
        class: AppBundle\Manager\RelatedParticipantsFinder
        arguments:
            - "%app.tmp.root.path%"
            - '@doctrine.orm.entity_manager'

    app.converter.event:
        class: AppBundle\Controller\ParamConverter\EventParamConverter
        arguments: ['@app.repository.event']
        tags:
            - { name: request.param_converter, priority: 2, converter: converter_event }

    app.repository.event:
        class: AppBundle\Entity\EventRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - 'AppBundle:Event'

    app.repository.participation:
        class: AppBundle\Entity\ParticipationRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - 'AppBundle:Participation'

    app.repository.open_street_map_element:
        class: AppBundle\Entity\Geo\LocationDescriptionRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - 'AppBundle:Geo\LocationDescription'

    app.repository.weather_current:
        class: AppBundle\Entity\Geo\CurrentWeatherRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - 'AppBundle\Entity\Geo\CurrentWeather'

    AppBundle\Security\EventVoter:
      autowire: true
      tags:
        - security.voter

    AppBundle\LocalhostInformationProvider:
        arguments:
            - "@request_stack"

    AppBundle\Form\GroupFieldAssignEntitiesType:
      autowire: true
      tags:
        - form.type

    AppBundle\Form\ImportEmployeeType:
      autowire: true
      tags:
        - form.type

    AppBundle\Form\EventEntityType:
      autowire: true
      tags:
        - form.type

    AppBundle\Form\Meal\MealFeedbackType:
        arguments:
            - "@doctrine.orm.entity_manager"
        tags:
            - { name: form.type}

    AppBundle\Form\AcquisitionAttribute\SpecifyEventSpecificVariableValuesForEventType:
      arguments:
        - "@doctrine.orm.entity_manager"
      tags:
        - form.type

    AppBundle\Manager\Geo\NominatimAddressResolver:
        arguments:
            - "%app.cache.nominatim_last_access.path%"

    app.geo.address_resolver:
        class: AppBundle\Manager\Geo\AddressResolver
        arguments:
            - '@AppBundle\Manager\Geo\NominatimAddressResolver'
            - '@app.repository.open_street_map_element'
        public: true

    AppBundle\Manager\Weather\OpenweathermapWeatherProvider:
        arguments:
            - "%app.geo.openweathermap.api_key%"

    app.geo.weather_provider:
        class: AppBundle\Manager\Weather\WeatherProvider
        arguments:
            - '@AppBundle\Manager\Weather\OpenweathermapWeatherProvider'
            - '@app.repository.weather_current'
        public: true

